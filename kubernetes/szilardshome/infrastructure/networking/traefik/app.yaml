apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  destination:
    namespace: traefik
    server: https://kubernetes.default.svc
  project: infrastructure
  source:
    chart: traefik
    repoURL: https://traefik.github.io/charts
    targetRevision: 35.3.0 
    helm:
      skipCrds: true
      values: |
        service:
          enabled: true
          type: LoadBalancer

        ports:
          web:
            port: 80
            expose: true
            exposedPort: 80
             redirectTo:
               port: websecure
          websecure:
            port: 443
            expose: true
            exposedPort: 443
            tls:
              enabled: true

        providers:
          kubernetesCRD:
            enabled: true
            allowEmptyServices: true
          kubernetesGateway:
            enabled: true
            # experimentalChannel: true # Ha kísérleti Gateway API funkciókat szeretnél


        kubernetesGateway:
          gatewayClass:
            enabled: true 
            name: traefik

        dashboard:
          enabled: true
          ingressRoute:
            enabled: true # Hozzon létre IngressRoute-ot a dashboardnak
            # ÉLESBEN ITT KONFIGURÁLJ AUTHENTIKÁCIÓS MIDDLEWARE-T!
            # middlewares:
            #   - name: my-dashboard-auth

        api:
          insecure: true # CSAK TESZTELÉSRE! Élesben NE!
          dashboard: true

        logs:
          general:
            level: INFO

        ingressClass:
          enabled: false # Ha CRD-ket vagy Gateway API-t használsz elsődlegesen

        experimental:
          enabled: false
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true # Létrehozza a 'traefik' névteret, ha nem létezik
      - RespectIgnoreDifferences=true